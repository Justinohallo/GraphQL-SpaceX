{"version":3,"sources":["logo.jpg","components/MissionKey.js","components/LaunchItem.js","components/Launches.js","components/Launch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","MissionKey","react_default","a","createElement","className","LaunchItem","_ref","_ref$launch","launch","flight_number","mission_name","launch_date_local","launch_success","classNames","text-success","text-danger","dist_default","format","Link","to","concat","LAUNCHES_QUERY","gql","_templateObject","Launches","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react","react_apollo_esm","query","loading","error","data","console","log","launches","map","Component","LAUNCH_QUERY","Launch_templateObject","Launch","props","match","params","parseInt","variables","_data$launch","launch_year","_data$launch$rocket","rocket","rocket_id","rocket_name","launch_type","client","ApolloClient","uri","App","BrowserRouter","src","logo","alt","style","width","display","margin","Route","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,8TCEzB,SAASC,IACtB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACfH,EAAAC,EAAAC,cAAA,SACKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBADrB,cAIAH,EAAAC,EAAAC,cAAA,SACKF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBADrB,0DCJW,SAASC,EAATC,GACG,IAAAC,EAAAD,EADkBE,OAAQC,EAC1BF,EAD0BE,cAAeC,EACzCH,EADyCG,aAAcC,EACvDJ,EADuDI,kBACzEC,EAAkBL,EAAlBK,eAEI,OACAX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,qBACIF,EAAAC,EAAAC,cAAA,QAAMC,UAAWS,IAAW,CAC5BC,eAAgBF,EAChBG,eAAgBH,KAFhB,IAGEF,IACNT,EAAAC,EAAAC,cAAA,mBAAUF,EAAAC,EAAAC,cAACa,EAAAd,EAAD,CAAQe,OAAO,oBAAf,IAAoCN,EAApC,OAEdV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAE,WAAAC,OAAaX,GAAiBL,UAAU,qBAAhD,uQCVZ,IAAMiB,EAAiBC,IAAHC,KA0CLC,EA/Bf,SAAAC,GAAA,SAAAD,IAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,GAAAE,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAF,EAAAC,GAAAC,OAAAQ,EAAA,EAAAR,CAAAF,EAAA,EAAAW,IAAA,SAAAC,MAAA,WAEI,OACEnC,EAAAC,EAAAC,cAACkC,EAAA,SAAD,KACApC,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBAAd,cACAH,EAAAC,EAAAC,cAACH,EAAD,MACAC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,MAAOlB,GAER,SAAAf,GAA4B,IAA1BkC,EAA0BlC,EAA1BkC,QAASC,EAAiBnC,EAAjBmC,MAAOC,EAAUpC,EAAVoC,KACd,OAAGF,EAAgBvC,EAAAC,EAAAC,cAAA,0BAChBsC,GAAOE,QAAQC,IAAIH,GAEfxC,EAAAC,EAAAC,cAACkC,EAAA,SAAD,KAECK,EAAKG,SAASC,IAAI,SAAAtC,GAAM,OACpBP,EAAAC,EAAAC,cAACE,EAAD,CAAY8B,IAAK3B,EAAOC,cAAeD,OAAQA,eAf3EgB,EAAA,CAA8BuB,scCb9B,IAAMC,EAAe1B,IAAH2B,KA0EHC,EAzDf,SAAAzB,GAAA,SAAAyB,IAAA,OAAAxB,OAAAC,EAAA,EAAAD,CAAAE,KAAAsB,GAAAxB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAwB,GAAAnB,MAAAH,KAAAI,YAAA,OAAAN,OAAAO,EAAA,EAAAP,CAAAwB,EAAAzB,GAAAC,OAAAQ,EAAA,EAAAR,CAAAwB,EAAA,EAAAf,IAAA,SAAAC,MAAA,WACW,IACA3B,EAAkBmB,KAAKuB,MAAMC,MAAMC,OAAnC5C,cAEP,OADEA,EAAc6C,SAAS7C,GAEvBR,EAAAC,EAAAC,cAACkC,EAAA,SAAD,KACIpC,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAOC,MAAOS,EAAcO,UAAW,CAAC9C,kBAElC,SAAAH,GAA4B,IAA1BkC,EAA0BlC,EAA1BkC,QAASC,EAAiBnC,EAAjBmC,MAAOC,EAAUpC,EAAVoC,KACd,GAAGF,EAAS,OAAOvC,EAAAC,EAAAC,cAAA,yBAChBsC,GAAOE,QAAQC,IAAIH,GAEtBE,QAAQC,IAAIF,GAJY,IAAAc,EAM4Bd,EAAKlC,OADlDE,EALiB8C,EAKjB9C,aAAcD,EALG+C,EAKH/C,cAAegD,EALZD,EAKYC,YAAa7C,EALzB4C,EAKyB5C,eALzB8C,EAAAF,EAMpBG,OAAQC,EANYF,EAMZE,UAAWC,EANCH,EAMDG,YAAaC,EANZJ,EAMYI,YACpC,OAAO7D,EAAAC,EAAAC,cAAA,WACHF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,kBACdH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAhB,IAA8BM,GAD9B,KAEAT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,kBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,kBACoBK,GAEpBR,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,gBACkBqD,GAElBxD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,mBACoBH,EAAAC,EAAAC,cAAA,QAAMC,UAAWS,IAAW,CACxCC,eAAgBF,EAChBG,eAAgBH,KAFJ,IAGTA,EAAiB,MAAQ,KAHhB,OAOxBX,EAAAC,EAAAC,cAAA,MAAIC,UAAU,QAAd,mBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cACNH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,eAA6CwD,GAC7C3D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,iBAA+CyD,GAC/C5D,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,iBAA+C0D,IAKvD7D,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACe,EAAA,EAAD,CAAMC,GAAG,IAAIf,UAAU,sBAAvB,kBA5CxB8C,EAAA,CAA4BH,aCbtBgB,EAAS,IAAIC,IAAa,CAC9BC,IAAK,aAsBQC,mLAjBX,OAEEjE,EAAAC,EAAAC,cAACmC,EAAA,EAAD,CAAgByB,OAAQA,GACtB9D,EAAAC,EAAAC,cAACgE,EAAA,EAAD,KACElE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKiE,IAAKC,IAAMC,IAAI,SACpBC,MAAO,CAAEC,MAAO,IAAKC,QAAQ,QAASC,OAAQ,UAChDzE,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWtD,IACjCvB,EAAAC,EAAAC,cAACwE,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,yBAAyBC,UAAW5B,cAV9CH,aCJEgC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS9B,MACvB,2DCZN+B,IAASC,OAAOnF,EAAAC,EAAAC,cAACkF,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.a1ee996e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.b15ef947.jpg\";","import React from 'react'\n\nexport default function MissionKey() {\n  return (\n    <div className='my-3'>\n    <p>\n         <span className='px-3 mr-2 bg-success'/> = Success\n    </p>\n\n    <p>\n         <span className='px-3 mr-2 bg-danger'/> = Fail\n    </p>\n\n\n    </div>\n  )\n}\n","import React from 'react'\nimport classNames from 'classnames'\nimport Moment from \"react-moment\"\nimport {Link} from \"react-router-dom\"\n\nexport default function LaunchItem({launch:{flight_number, mission_name, launch_date_local,\nlaunch_success}}) {\n \n    return (\n    <div className='card card-body mb-3'>\n      <div className='row'>\n        <div className=\"col-md-9\"> \n            <h4>Mission: \n                <span className={classNames({\n                'text-success': launch_success,\n                'text-danger': !launch_success\n            })}> {mission_name}</span></h4>\n            <p> Date: <Moment format=\"YYYY-MM-DD HH:mm\"> {launch_date_local} </Moment></p>\n        </div>\n        <div className='col-md-3'>\n            <Link to={`/launch/${flight_number}`} className='btn btn-secondary'> Details</Link>\n        </div>\n\n\n      </div>\n    </div>\n  )\n}\n","import React, { Component, Fragment } from 'react'\nimport gql from \"graphql-tag\";\nimport {Query} from 'react-apollo';\n\n\n//COMPONENTS\n\nimport MissionKey from \"./MissionKey\"\nimport LaunchItem from \"./LaunchItem\"\n\nconst LAUNCHES_QUERY = gql`\n    query LaunchesQuery {\n        launches {\n            flight_number\n            mission_name\n            launch_date_local\n            launch_success\n        }\n    }\n`\n\nexport class Launches extends Component {\n  render() {\n    return (\n      <Fragment>\n      <h1 className=\"display-4 my-3\"> Launches </h1>\n      <MissionKey/>\n      <Query query={LAUNCHES_QUERY}>\n        {\n            ({loading, error, data}) => {\n                if(loading) return <h4> Loading...</h4>\n                if(error) console.log(error);\n                \n                return <Fragment>\n                    { \n                        data.launches.map(launch => (\n                            <LaunchItem key={launch.flight_number} launch={launch}/>\n                        ))\n                    }\n\n\n                </Fragment>\n\n            }\n        }\n      \n      </Query>\n      </Fragment>\n    )\n  }\n}\n\nexport default Launches\n","import React, { Component, Fragment } from 'react';\nimport gql from 'graphql-tag';\nimport {Query} from 'react-apollo';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\n\n\n\nconst LAUNCH_QUERY = gql`\n    query LaunchQuery($flight_number: Int!){\n        launch(flight_number: $flight_number){\n            flight_number\n            mission_name\n            launch_year\n            launch_success\n            launch_date_local\n            rocket{\n                rocket_id\n                rocket_name\n                launch_type\n            }\n        }\n    }\n`\n\nexport class Launch extends Component {\n  render() {\n      let {flight_number } = this.props.match.params;\n      flight_number=parseInt(flight_number)\n    return (\n      <Fragment>\n          <Query query={LAUNCH_QUERY} variables={{flight_number}}>\n           {\n                ({loading, error, data}) => {\n                    if(loading) return <h4> Loading...</h4>\n                    if(error) console.log(error)\n\n                    console.log(data)\n                    const {mission_name, flight_number, launch_year, launch_success, \n                        rocket:{rocket_id, rocket_name, launch_type}} = data.launch\n                    return <div>\n                        <h1 className='display-4 my-3'> \n                        <span className='text-dark'> {mission_name}</span> </h1>\n                        <h4 className='mb-3'>Launch Details</h4>\n                        <ul className='list-group'>\n                            <li className='list-group-item'>\n                                Flight Number: {flight_number}\n                            </li>\n                            <li className='list-group-item'>\n                                Launch Year :{launch_year}\n                            </li>\n                            <li className='list-group-item'>\n                                Launch Success: <span className={classNames({\n                                    'text-success': launch_success,\n                                    'text-danger': !launch_success\n                                })} > {launch_success ? 'Yes' : 'No'} </span>\n                            </li>\n                        </ul>\n\n                        <h4 className='my-3'> Rocket Drtails</h4>\n                        <ul className='list-group'> \n                                <li className='list-group-item'> Rocket ID: {rocket_id}</li>\n                                <li className='list-group-item'> Rocket Name: {rocket_name}</li>\n                                <li className='list-group-item'> Rocket Type: {launch_type}</li>\n\n                        \n                        \n                        </ul>\n                        <hr/>\n                        <Link to=\"/\" className=' btn btn-secondary'> Back </Link>\n                    </div>\n                }\n           }\n           \n          </Query>\n      </Fragment>\n       \n      \n    )\n  }\n}\n\nexport default Launch\n","import React, { Component } from 'react';\nimport ApolloClient from \"apollo-boost\";\nimport {ApolloProvider} from 'react-apollo'\nimport logo from \"./logo.jpg\"\nimport './App.css';\n\n// REACT ROUTER\nimport {BrowserRouter as Router, Route} from \"react-router-dom\"\n\n// COMPONENTS \nimport Launches from \"./components/Launches\"\nimport Launch from \"./components/Launch\"\nconst client = new ApolloClient({\n  uri: \"/graphql\"\n})\n\nclass App extends Component {\n  render() {\n    return (\n\n      <ApolloProvider client={client}>\n        <Router>\n          <div className=\"App\">\n            <img src={logo} alt='SpaceX'\n            style={{ width: 300, display:'block', margin: 'auto'}}/>\n          <Route exact path='/' component={Launches} />\n          <Route exact path='/launch/:flight_number' component={Launch} />\n          </div>\n          \n        </Router>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n\n\n\n"],"sourceRoot":""}